theme_bw()
}
ggplotRegression(lm(csq5~., data = final))
semdata <- read.csv("C:/EGA/magang citiasia/20rawdata2.csv")
semdata
normsem <- data.matrix(data.frame(unclass(semdata)))
normsem
corrdata2 = cor(normsem)
corrdata2
final <- data.frame(normsem)
final
indikator <- 'csq10+csq7,
csq3+csq8+csq4'
labelsem <- 'Kinerja,
Motivasi'
modelsem <- labelsem + '=~' + indikator + '\n' + labelsem + '~' + labelsem
modelsem <- 'kinerja=~csq7+csq10
motivasi=~csq3+csq4+csq8
kinerja~motivasi
'
#fit model
fit1 <- sem(modelsem, data = final)
library(semPlot)
library(lavaan)
library(haven)
#fit model
fit1 <- sem(modelsem, data = final)
fit1
summary(fit1, standardized=TRUE)
inspect(fit1, what = 'std')
library(DiagrammeR)
lavaanPlot()
install.packages("lavaanPlot")
library(lavaanPlot)
lavaanPlot(fit1, coefs = TRUE, covs = TRUE, stars = c("latent"))
lavaanPlot(model = fit1, coefs = TRUE, covs = TRUE, stars = c("latent"))
semPaths(fit1, what = "std", whatLabels = "std", rotation=2,sizeMan=8,
sizeMan2 = 5, sizeLat = 12, sizeLat2 = 5,nCharNodes=0,
nCharEdges=0, residuals = FALSE,
style="lisrel",curvePivot=TRUE, edge.color="black",
intercepts = FALSE, edge.label.cex = 0.9)
title("SEM Analysis with Lavaan")
lavaanPlot(model = fit1, coefs = TRUE, covs = TRUE, stars = c("std"))
lavaanPlot(model = fit1, coefs = TRUE, covs = TRUE, stars = c("latent"))
lavaanPlot(model = fit1, coefs = TRUE, covs = TRUE, stars = c("regres"))
lavaanPlot(model = fit1, coefs = TRUE, covs = TRUE, stars = c("regress"))
indikator <- rbind(c(csq7, csq10). c(csq8, csq3, csq4))
indikator <- rbind(c(csq7, csq10), c(csq8, csq3, csq4))
indikator <- rbind(c('csq7', 'csq10'), c('csq8', 'csq3', 'csq4'))
indikator
indikator <- rbind(c('csq7', 'csq10', 0), c('csq8', 'csq3', 'csq4'))
indikator
indikator <- cbind(c('csq7', 'csq10'), c('csq8', 'csq3', 'csq4'))
indikator
indikator <- rbind(c('csq7', 'csq10', 'csq8', 'csq3', 'csq4'),
c('Kinerja','Kinerja', 'Motivasi', 'Motivasi', 'Motivasi'))
indikator
indikator <- cbind(c('csq7', 'csq10', 'csq8', 'csq3', 'csq4'),
c('Kinerja','Kinerja', 'Motivasi', 'Motivasi', 'Motivasi'))
indikator
#regression with product
data2=read.csv("C:/EGA/magang citiasia/20rawdata2.csv")
data2
#nomalize
norm <- data.matrix(data.frame(unclass(data2)))
norm
corrdata2 = cor(norm)
corrdata2
final <- data.frame(norm)
final
#3d multiple regression
regreslin3 = lm(formula = csq7 ~ csq5 + csq8, data = final)
regreslin3
summary(regreslin3)
library(scatterplot3d)
x = csq7
y = csq5
z = csq8
regreslin3 = lm(formula = y ~ x+z , data = final)
regreslin3
x = csq7
y = csq5
z = csq8
z <- csq8
p <- scatterplot3d(csq5, csq7, csq8, highlight.3d = F, type = "p")
regreslin3 = lm(formula = csq7 ~ csq5 + csq8, data = final)
regreslin3
summary(regreslin3)
p <- scatterplot3d(csq5, csq7, csq8, highlight.3d = F, type = "p")
p <- scatterplot3d(final$csq5, final$csq7, final$csq8, highlight.3d = F, type = "p")
p$plane3d(regreslin3, draw_polygon = T, draw_lines = F)
p$plane3d(regreslin3, draw_polygon = T, draw_lines = T, polygon_args = list(col = rgb(.1, .2, .7, .5)))
wh <- resid(regreslin3) > 0
s3d$points3d(csq5[wh], csq8[wh], csq7[wh], pch = 19)
p$points3d(csq5[wh], csq8[wh], csq7[wh], pch = 19)
p$points3d(x[wh], z[wh], y[wh], pch = 19)
final2 <- resid(regreslin3) > 0
p$points3d(csq5[final2], csq8[final2], csq7[final2], pch = 19)
p$points3d(x[final2], z[final2], y[final2], pch = 19)
final2
p$points3d(final2$csq5, final2$csq7, final2$csq8, pch = 19)
p <- scatterplot3d(final$csq5, final$csq7, final$csq8, highlight.3d = F, type = "p")
p$plane3d(regreslin3, draw_polygon = T, draw_lines = T,
polygon_args = list(col = rgb(.1, .2, .7, .5)))
p$plane3d(regreslin3)
p <- scatterplot3d(final$csq5, final$csq7, final$csq8, highlight.3d = F, type = "p")
p$plane3d(regreslin3)
p <- scatterplot3d(final$csq5, final$csq7, final$csq8, highlight.3d = F, type = "h", pch=16)
p$plane3d(regreslin3)
#3d multiple regression
data4 = read.csv("C:/EGA/file python/california_housing_test.csv")
norm2 <- data.matrix(data.frame(unclass(data4)))
norm2
corrdata3 = cor(norm)
corrdata3
final2 <- data.frame(norm)
final2
corrdata3 = cor(norm2)
corrdata3
final2 <- data.frame(norm2)
final2
regreslin3 = lm(formula = housing_median_age ~ total_rooms + total_bedrooms,
data = final2)
regreslin3
summary(regreslin3)
p <- scatterplot3d(final2$housing_median_age, final2$total_rooms, final2$total_bedrooms,
highlight.3d = F, type = "h", pch=16)
p$plane3d(regreslin3)
p <- scatterplot3d(final2$housing_median_age, final2$total_rooms, final2$total_bedrooms,
highlight.3d = F, type = "h", pch=16, color = 'blue', angle = 55)
p$plane3d(regreslin3)
p <- scatterplot3d(final2$housing_median_age, final2$total_rooms, final2$total_bedrooms,
highlight.3d = F, type = "h", pch=16, color = 'blue', angle = 65)
p <- scatterplot3d(final2$housing_median_age, final2$total_rooms, final2$total_bedrooms,
highlight.3d = F, type = "h", pch=16, color = 'blue', angle = 35)
p <- scatterplot3d(final2$housing_median_age, final2$total_rooms, final2$total_bedrooms,
highlight.3d = F, type = "h", pch=16, color = 'blue',
angle = 35, main = "Multiple Regression 3 Variable")
p$plane3d(regreslin3)
p <- scatterplot3d(final2$housing_median_age, final2$total_rooms, final2$total_bedrooms,
highlight.3d = F, type = "h", pch=16, color = 'blue',
angle = 105, main = "Multiple Regression 3 Variable")
p <- scatterplot3d(final2$housing_median_age, final2$total_rooms, final2$total_bedrooms,
highlight.3d = F, type = "h", pch=16, color = 'blue',
angle = 805, main = "Multiple Regression 3 Variable")
p <- scatterplot3d(final2$housing_median_age, final2$total_rooms, final2$total_bedrooms,
highlight.3d = F, type = "h", pch=16, color = 'blue',
angle = 85, main = "Multiple Regression 3 Variable")
p <- scatterplot3d(final2$housing_median_age, final2$total_rooms, final2$total_bedrooms,
highlight.3d = F, type = "h", pch=16, color = 'blue',
angle = 75, main = "Multiple Regression 3 Variable")
p <- scatterplot3d(final2$housing_median_age, final2$total_rooms, final2$total_bedrooms,
highlight.3d = F, type = "h", pch=16, color = 'blue',
angle = 55, main = "Multiple Regression 3 Variable")
p <- scatterplot3d(final2$housing_median_age, final2$total_rooms, final2$total_bedrooms,
highlight.3d = F, type = "h", pch=16, color = 'blue',
angle = 25, main = "Multiple Regression 3 Variable")
p$plane3d(regreslin3)
p <- scatterplot3d(final2$housing_median_age, final2$total_rooms, final2$total_bedrooms,
highlight.3d = TRUE, type = "h", pch=16, color = 'blue',
, main = "Multiple Regression 3 Variable")
p <- scatterplot3d(final2$housing_median_age, final2$total_rooms, final2$total_bedrooms,
highlight.3d = TRUE, type = "h", pch=16
, main = "Multiple Regression 3 Variable")
p <- scatterplot3d(final2$housing_median_age, final2$total_rooms, final2$total_bedrooms,
highlight.3d = TRUE, type = "h", pch=16, grid = TRUE, box = FALSE
, main = "Multiple Regression 3 Variable")
p$plane3d(regreslin3)
p <- scatterplot3d(final2$housing_median_age, final2$total_rooms, final2$total_bedrooms,
highlight.3d = TRUE, type = "h", pch=16, grid = TRUE,
mar = c(2.5, 2.5, 2, 1.5), angle = 55, main = "Multiple Regression 3 Variable")
p$plane3d(regreslin3)
p$plane3d(regreslin3,draw_polygon = TRUE, draw_lines = TRUE,
polygon_args = list(col = rgb(.1, .2, .7, .5)))
regreslin3 = lm(formula = population ~ households + median_income,
data = final2)
regreslin3
summary(regreslin3)
p <- scatterplot3d(final2$households, final2$median_income, final2$population,
highlight.3d = TRUE, type = "h", pch=16, grid = TRUE,
mar = c(2.5, 2.5, 2, 1.5), angle = 55, main = "Multiple Regression 3 Variable")
p$plane3d(regreslin3,draw_polygon = TRUE, draw_lines = TRUE,
polygon_args = list(col = rgb(.1, .2, .7, .5)))
print(cls)
cls
clc()
shell("cls")
library(semPlot)
library(lavaan)
library(haven)
semdata <- read.csv("C:/EGA/magang citiasia/20rawdata2.csv")
semdata
#nomalize
normsem <- data.matrix(data.frame(unclass(semdata)))
normsem
corrdata2 = cor(normsem)
corrdata2
final <- data.frame(normsem)
final
indikator <- cbind(c('csq7', 'csq10', 'csq8', 'csq3', 'csq4'),
c('Kinerja','Kinerja', 'Motivasi', 'Motivasi', 'Motivasi'))
indikator
label <- cbind(c('Kinerja', 'Motivasi'))
label
label <- rbind(c('Kinerja', 'Motivasi'))
label
dframe1 <- paste(indikator[, 1], indikator[, 2], sep = '=~')
dframe1
dframe2 <- paste(label[, 1], label[, 2], sep = '~')
dframe2
model2 <- data.frame(dframe1, dframe2)
data.frame(unlist(model2))
model2
model2 <- data.frame(unlist(dframe1, dframe2))
model2
model2 <- matrix(dframe1, dframe2)
model2 <- list(dframe1, dframe2)
model2 <- list(dframe1, dframe2)
model2
model2 <- unlist(dframe1, dframe2)
model2
model2 <- merge(dframe1, dframe2)
model2
model2 <- merge(dframe1, dframe2, ncol(1))
model2
model2 <- merge(dframe1, dframe2, ncol=1)
model2
model2 <- cbind(dframe1, dframe2)
model2
model2 <- rbind(dframe1, dframe2)
model2
model2 <- cbind(dframe1, dframe2, ncol = 1)
model2
model2 <- rbind(dframe1, dframe2, ncol = 1)
model2
dframe1 <- paste(indikator[, 1], indikator[, 2], sep = '=~')
dframe1
dframe2 <- paste(label[, 1], label[, 2], sep = '~')
dframe2
model2 <- paste(dframe1, dframe2)
model2
model2 <- merge(dframe1, dframe2)
model2
model2 <- merge(dframe1, dframe2, ncol = 1)
model2
label
model2 <- cbind(c(dframe1, dframe2))
model2
#fit model
fit1 <- sem(model2, data = final)
#fit model
fit1 <- sem(as.matrix(model2), data = final)
modelsem <- 'kinerja=~csq7+csq10
motivasi=~csq3+csq4+csq8
kinerja~motivasi
'
typeof(modelsem)
typeof(model2)
#fit model
fit1 <- sem(model2, data = final)
list(model2)
unlist(model2)
dframe1 <- paste(indikator[, 1], indikator[, 2], sep = '~')
dframe1
dframe2 <- paste(label[, 1], label[, 2], sep = '~')
dframe2
model2 <- cbind(c(dframe1, dframe2))
model2
#fit model
fit1 <- sem(model2, data = final)
dframe1 <- paste(indikator[, 1], indikator[, 2], sep = '=~')
dframe1
dframe2 <- paste(label[, 1], label[, 2], sep = '~')
dframe2
model2 <- cbind(c(dframe1, dframe2))
model2
modelsem <- 'kinerja=~csq7+csq10
motivasi=~csq3+csq4+csq8
kinerja~motivasi
'
#fit model
fit1 <- sem(model2, data = final)
fit1
indikator <- cbind(c('csq7+csq10', 'csq8+csq3+csq4'),
c('Kinerja', 'Motivasi'))
indikator
label <- rbind(c('Kinerja', 'Motivasi'))
label
dframe1 <- paste(indikator[, 1], indikator[, 2], sep = '=~')
dframe1
dframe2 <- paste(label[, 1], label[, 2], sep = '~')
dframe2
model2 <- cbind(c(dframe1, dframe2))
model2
#fit model
fit1 <- sem(model2, data = final)
indikator <- cbind(c('Kinerja', 'Motivasi'),
c('csq7+csq10', 'csq8+csq3+csq4'),
)
indikator
indikator <- cbind(c('Kinerja', 'Motivasi'),
c('csq7+csq10', 'csq8+csq3+csq4')
)
indikator
label <- rbind(c('Kinerja', 'Motivasi'))
label
dframe1 <- paste(indikator[, 1], indikator[, 2], sep = '=~')
dframe1
dframe2 <- paste(label[, 1], label[, 2], sep = '~')
dframe2
model2 <- cbind(c(dframe1, dframe2))
model2
#fit model
fit1 <- sem(model2, data = final)
fit1
summary(fit1, standardized=TRUE)
inspect(fit1, what = 'std')
#plotting
semPaths(fit1, what = "std", whatLabels = "std", rotation=2,sizeMan=8,
sizeMan2 = 5, sizeLat = 12, sizeLat2 = 5,nCharNodes=0,
nCharEdges=0, residuals = FALSE,
style="lisrel",curvePivot=TRUE, edge.color="black",
intercepts = FALSE, edge.label.cex = 0.9)
title("SEM Analysis with Lavaan")
shiny::runApp('C:/EGA/magang citiasia/cobawebfix')
runApp('C:/EGA/magang citiasia/cobawebfix')
runApp('C:/EGA/magang citiasia/cobawebfix')
shiny::runApp('C:/EGA/magang citiasia/cobawebfix')
runApp('C:/EGA/magang citiasia/cobawebfix')
runApp('C:/EGA/magang citiasia/cobawebfix')
runApp('C:/EGA/magang citiasia/cobawebfix')
data4 = read.csv("C:/EGA/file python/california_housing_test.csv")
norm2 <- data.matrix(data.frame(unclass(data4)))
norm2
corrdata3 = cor(norm2)
corrdata3
final2 <- data.frame(norm2)
final2
regreslin3 = lm(formula = population ~ households + median_income,
data = final2)
regreslin3
summary(regreslin3)
colnames(final2[1])
library(scatterplot3d)
p <- scatterplot3d(final2$households, final2$median_income, final2$population,
xlab = colnames(final2[7]), ylab = colnames(final2[8]), zlab = colnames(final2[6]),
highlight.3d = TRUE, type = "h", pch=16, grid = TRUE,
mar = c(2.5, 2.5, 2, 1.5), angle = 55, main = "Multiple Regression 3 Variable")
p$plane3d(regreslin3,draw_polygon = TRUE, draw_lines = TRUE,
polygon_args = list(col = rgb(.1, .2, .7, .5)))
p <- scatterplot3d(final2$households, final2$median_income, final2$population,
xlab = colnames(final2[7]), ylab = colnames(final2[8]), zlab = colnames(final2[6]),
highlight.3d = TRUE, type = "h", pch=16, grid = TRUE,
mar = c(2.5, 2.5, 2, 1.5), angle = 90, main = "Multiple Regression 3 Variable")
p$plane3d(regreslin3,draw_polygon = TRUE, draw_lines = TRUE,
polygon_args = list(col = rgb(.1, .2, .7, .5)))
p <- scatterplot3d(final2$households, final2$median_income, final2$population,
xlab = colnames(final2[7]), ylab = colnames(final2[8]), zlab = colnames(final2[6]),
highlight.3d = TRUE, type = "h", pch=16, grid = TRUE,
mar = c(2.5, 2.5, 2, 1.5), angle = 100, main = "Multiple Regression 3 Variable")
p$plane3d(regreslin3,draw_polygon = TRUE, draw_lines = TRUE,
polygon_args = list(col = rgb(.1, .2, .7, .5)))
p <- scatterplot3d(final2$households, final2$median_income, final2$population,
xlab = colnames(final2[7]), ylab = colnames(final2[8]), zlab = colnames(final2[6]),
highlight.3d = TRUE, type = "h", pch=16, grid = TRUE,
mar = c(2.5, 2.5, 2, 1.5), angle = 30, main = "Multiple Regression 3 Variable")
p$plane3d(regreslin3,draw_polygon = TRUE, draw_lines = TRUE,
polygon_args = list(col = rgb(.1, .2, .7, .5)))
p <- scatterplot3d(final2$households, final2$median_income, final2$population,
xlab = colnames(final2[7]), ylab = colnames(final2[8]), zlab = colnames(final2[6]),
highlight.3d = TRUE, type = "h", pch=16, grid = TRUE,
mar = c(2.5, 2.5, 2, 1.5), angle = 120, main = "Multiple Regression 3 Variable")
p <- scatterplot3d(final2$households, final2$median_income, final2$population,
xlab = colnames(final2[7]), ylab = colnames(final2[8]), zlab = colnames(final2[6]),
highlight.3d = TRUE, type = "h", pch=16, grid = TRUE,
mar = c(2.5, 2.5, 2, 1.5), angle = 70, main = "Multiple Regression 3 Variable")
p$plane3d(regreslin3,draw_polygon = TRUE, draw_lines = TRUE,
polygon_args = list(col = rgb(.1, .2, .7, .5)))
p <- scatterplot3d(final2$households, final2$median_income, final2$population,
xlab = colnames(final2[7]), ylab = colnames(final2[8]), zlab = colnames(final2[6]),
highlight.3d = TRUE, type = "h", pch=16, grid = TRUE,
mar = c(2.5, 2.5, 2, 1.5), angle = 55, main = "Multiple Regression 3 Variable")
p$plane3d(regreslin3,draw_polygon = TRUE, draw_lines = TRUE,
polygon_args = list(col = rgb(.1, .2, .7, .5)))
p <- scatterplot3d(final2$households, final2$median_income, final2$population,
xlab = colnames(final2[7]), ylab = colnames(final2[8]), zlab = colnames(final2[6]),
highlight.3d = TRUE, type = "h", pch=16, grid = TRUE,
mar = c(2.5, 2.5, 2, 1.5), angle = 80, main = "Multiple Regression 3 Variable")
p$plane3d(regreslin3,draw_polygon = TRUE, draw_lines = TRUE,
polygon_args = list(col = rgb(.1, .2, .7, .5)))
data2=read.csv("C:/EGA/magang citiasia/20rawdata2.csv")
data2
#nomalize
norm <- data.matrix(data.frame(unclass(data2)))
norm
corrdata2 = cor(norm)
corrdata2
final <- data.frame(norm)
final
regresilin2 = lm(csq5~., data = final)
regresilin2
summary(regresilin2)
par(mfrow=c(2,2))
plot(regresilin2)
library(ggplot2)
ggplot(final, aes(x = csq7, y=csq10))+
geom_point(color='#2980B9', size = 4) +
geom_smooth(method='lm', color='#2C3E50')
plot(x = final$csq10,
y = final$csq7, pch=16)
abline(lm(final$csq10~final$csq7), col = 4, lwd = 3)
ggplotRegression <- function (fit) {
#require(ggplot2)
ggplot(fit$model, aes_string(x = names(fit$model)[2], y = names(fit$model)[1])) +
geom_point() +
stat_smooth(formula = y ~ x, method = "lm", col = "red") +
labs(title = paste("Adj R2 = ",signif(summary(fit)$adj.r.squared, 5),
"Intercept =",signif(fit$coef[[1]],5 ),
" Slope =",signif(fit$coef[[2]], 5),
" P =",signif(summary(fit)$coef[2,4], 5)))+
theme_bw()
}
ggplotRegression(lm(csq10~csq8, data = final))
library(semPlot)
library(lavaan)
library(haven)
semdata <- read.csv("C:/EGA/magang citiasia/20rawdata2.csv")
semdata
#nomalize
normsem <- data.matrix(data.frame(unclass(semdata)))
normsem
corrdata2 = cor(normsem)
corrdata2
final <- data.frame(normsem)
final
indikator <- cbind(c('Kinerja', 'Motivasi', 'Produk'),
c('csq7+csq10', 'csq8+csq3+csq4', 'csq6')
)
indikator
label <- cbind(c('Kinerja', 'Produk'),
c('Motivasi', 'Motivasi'))
label
dframe1 <- paste(indikator[, 1], indikator[, 2], sep = '=~')
dframe1
dframe2 <- paste(label[, 1], label[, 2], sep = '~')
dframe2
model2 <- cbind(c(dframe1, dframe2))
model2
modelsem <- 'kinerja=~csq7+csq10
motivasi=~csq3+csq4+csq8
kinerja~motivasi
'
typeof(modelsem)
#fit model
fit1 <- sem(model2, data = final)
fit1
summary(fit1, standardized=TRUE)
inspect(fit1, what = 'std')
#plotting
semPaths(fit1, what = "std", whatLabels = "std", rotation=2,sizeMan=8,
sizeMan2 = 5, sizeLat = 12, sizeLat2 = 5,nCharNodes=0,
nCharEdges=0, residuals = FALSE,
style="lisrel",curvePivot=TRUE, edge.color="black",
intercepts = FALSE, edge.label.cex = 0.9)
title("SEM Analysis with Lavaan")
library(semPlot)
library(lavaan)
library(haven)
semdata <- read.csv("C:/EGA/magang citiasia/20rawdata2.csv")
semdata
#nomalize
normsem <- data.matrix(data.frame(unclass(semdata)))
normsem
corrdata2 = cor(normsem)
corrdata2
final <- data.frame(normsem)
final
indikator <- cbind(c('Kinerja', 'Motivasi', 'Produk'),
c('csq7+csq10', 'csq8+csq3+csq4', 'csq6')
)
indikator
label <- cbind(c('Kinerja', 'Produk'),
c('Motivasi', 'Motivasi'))
label
dframe1 <- paste(indikator[, 1], indikator[, 2], sep = '=~')
dframe1
dframe2 <- paste(label[, 1], label[, 2], sep = '~')
dframe2
model2 <- cbind(c(dframe1, dframe2))
model2
modelsem <- 'kinerja=~csq7+csq10
motivasi=~csq3+csq4+csq8
kinerja~motivasi
'
typeof(modelsem)
#fit model
fit1 <- sem(model2, data = final)
fit1
summary(fit1, standardized=TRUE)
inspect(fit1, what = 'std')
#plotting
semPaths(fit1, what = "std", whatLabels = "std", rotation=2,sizeMan=8,
sizeMan2 = 5, sizeLat = 12, sizeLat2 = 5,nCharNodes=0,
nCharEdges=0, residuals = FALSE,
style="lisrel",curvePivot=TRUE, edge.color="black",
intercepts = FALSE, edge.label.cex = 0.9)
title("SEM Analysis with Lavaan")
shiny::runApp('C:/EGA/magang citiasia/cobawebfix')
runApp('C:/EGA/magang citiasia/cobawebfix')
shiny::runApp('C:/EGA/magang citiasia/cobawebfix')
runApp('C:/EGA/magang citiasia/cobawebfix')
shiny::runApp()
